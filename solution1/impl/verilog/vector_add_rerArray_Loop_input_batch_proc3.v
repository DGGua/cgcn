// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vector_add_rerArray_Loop_input_batch_proc3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        node_cnt_dout,
        node_cnt_num_data_valid,
        node_cnt_fifo_cap,
        node_cnt_empty_n,
        node_cnt_read,
        output_size_dout,
        output_size_num_data_valid,
        output_size_fifo_cap,
        output_size_empty_n,
        output_size_read,
        output_data,
        output_data_ap_vld,
        output_r_dout,
        output_r_num_data_valid,
        output_r_fifo_cap,
        output_r_empty_n,
        output_r_read,
        featrue_length_dout,
        featrue_length_num_data_valid,
        featrue_length_fifo_cap,
        featrue_length_empty_n,
        featrue_length_read,
        p_read1_dout,
        p_read1_num_data_valid,
        p_read1_fifo_cap,
        p_read1_empty_n,
        p_read1_read,
        weight_input_din,
        weight_input_num_data_valid,
        weight_input_fifo_cap,
        weight_input_full_n,
        weight_input_write,
        p_read_dout,
        p_read_num_data_valid,
        p_read_fifo_cap,
        p_read_empty_n,
        p_read_read,
        property_input_din,
        property_input_num_data_valid,
        property_input_fifo_cap,
        property_input_full_n,
        property_input_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] node_cnt_dout;
input  [2:0] node_cnt_num_data_valid;
input  [2:0] node_cnt_fifo_cap;
input   node_cnt_empty_n;
output   node_cnt_read;
input  [31:0] output_size_dout;
input  [1:0] output_size_num_data_valid;
input  [1:0] output_size_fifo_cap;
input   output_size_empty_n;
output   output_size_read;
output  [31:0] output_data;
output   output_data_ap_vld;
input  [31:0] output_r_dout;
input  [1:0] output_r_num_data_valid;
input  [1:0] output_r_fifo_cap;
input   output_r_empty_n;
output   output_r_read;
input  [31:0] featrue_length_dout;
input  [1:0] featrue_length_num_data_valid;
input  [1:0] featrue_length_fifo_cap;
input   featrue_length_empty_n;
output   featrue_length_read;
input  [31:0] p_read1_dout;
input  [2:0] p_read1_num_data_valid;
input  [2:0] p_read1_fifo_cap;
input   p_read1_empty_n;
output   p_read1_read;
output  [31:0] weight_input_din;
input  [1:0] weight_input_num_data_valid;
input  [1:0] weight_input_fifo_cap;
input   weight_input_full_n;
output   weight_input_write;
input  [31:0] p_read_dout;
input  [2:0] p_read_num_data_valid;
input  [2:0] p_read_fifo_cap;
input   p_read_empty_n;
output   p_read_read;
output  [31:0] property_input_din;
input  [1:0] property_input_num_data_valid;
input  [1:0] property_input_fifo_cap;
input   property_input_full_n;
output   property_input_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg node_cnt_read;
reg output_size_read;
reg[31:0] output_data;
reg output_data_ap_vld;
reg output_r_read;
reg featrue_length_read;
reg p_read1_read;
reg weight_input_write;
reg p_read_read;
reg property_input_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    node_cnt_blk_n;
reg    output_size_blk_n;
reg    featrue_length_blk_n;
reg    p_read1_blk_n;
reg    p_read_blk_n;
reg   [31:0] output_size_read_reg_353;
reg   [31:0] p_read_1_reg_359;
reg   [31:0] featrue_length_read_reg_364;
reg   [31:0] p_read_2_reg_369;
reg   [0:0] tmp_reg_374;
reg   [29:0] trunc_ln24_1_reg_379;
reg   [29:0] trunc_ln24_2_reg_384;
wire   [6:0] empty_fu_234_p1;
reg   [6:0] empty_reg_389;
wire   [30:0] select_ln24_fu_255_p3;
reg   [30:0] select_ln24_reg_394;
wire    ap_CS_fsm_state2;
wire   [0:0] empty_17_fu_262_p2;
reg   [0:0] empty_17_reg_399;
wire   [6:0] add_ln36_1_fu_267_p2;
reg   [6:0] add_ln36_1_reg_403;
wire   [33:0] tmp_1_fu_272_p3;
reg   [33:0] tmp_1_reg_408;
wire   [29:0] add_ln36_fu_291_p2;
reg   [29:0] add_ln36_reg_418;
wire    ap_CS_fsm_state3;
wire   [31:0] add_ln39_fu_302_p2;
reg   [31:0] add_ln39_reg_426;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state10;
wire   [2:0] add_ln67_fu_336_p2;
reg   [2:0] add_ln67_reg_439;
reg   [6:0] buff_address0;
reg    buff_ce0;
reg    buff_we0;
wire   [31:0] buff_q0;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_idle;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready;
wire   [31:0] grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_idle;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read;
wire   [6:0] grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0;
wire   [31:0] grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_idle;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready;
wire   [31:0] grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din;
wire    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write;
reg   [31:0] turn_reg_154;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln36_fu_286_p2;
reg   [2:0] row_reg_165;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state9;
reg    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg;
wire   [0:0] icmp_ln39_fu_297_p2;
wire    ap_CS_fsm_state5;
reg    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg;
reg    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg;
wire    ap_CS_fsm_state6;
reg   [10:0] ap_NS_fsm;
wire    ap_NS_fsm_state7;
wire   [63:0] p_cast_fu_325_p1;
reg   [29:0] batch_fu_96;
wire   [0:0] icmp_ln67_fu_330_p2;
reg    ap_block_state1;
reg   [31:0] output_data_preg;
wire   [31:0] sub_ln24_fu_208_p2;
wire   [30:0] zext_ln24_fu_243_p1;
wire   [30:0] sub_ln24_1_fu_246_p2;
wire   [30:0] zext_ln24_1_fu_252_p1;
wire   [30:0] zext_ln36_fu_282_p1;
wire   [1:0] empty_18_fu_308_p1;
wire   [6:0] tmp_3_fu_312_p3;
wire   [6:0] empty_19_fu_320_p2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
#0 grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg = 1'b0;
#0 grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg = 1'b0;
#0 grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg = 1'b0;
#0 output_data_preg = 32'd0;
end

vector_add_rerArray_Loop_input_batch_proc3_buff_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
buff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_address0),
    .ce0(buff_ce0),
    .we0(buff_we0),
    .d0(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0),
    .q0(buff_q0)
);

vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1 grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start),
    .ap_done(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done),
    .ap_idle(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_idle),
    .ap_ready(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready),
    .property_input_din(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din),
    .property_input_num_data_valid(2'd0),
    .property_input_fifo_cap(2'd0),
    .property_input_full_n(property_input_full_n),
    .property_input_write(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write),
    .bound(tmp_1_reg_408),
    .featrue_val(p_read_2_reg_369)
);

vector_add_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4 grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start),
    .ap_done(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done),
    .ap_idle(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_idle),
    .ap_ready(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready),
    .output_r_dout(output_r_dout),
    .output_r_num_data_valid(2'd0),
    .output_r_fifo_cap(2'd0),
    .output_r_empty_n(output_r_empty_n),
    .output_r_read(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read),
    .bound(tmp_1_reg_408),
    .buff_address0(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0),
    .buff_ce0(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0),
    .buff_we0(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0),
    .buff_d0(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0)
);

vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2 grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start),
    .ap_done(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done),
    .ap_idle(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_idle),
    .ap_ready(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready),
    .weight_input_din(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din),
    .weight_input_num_data_valid(2'd0),
    .weight_input_fifo_cap(2'd0),
    .weight_input_full_n(weight_input_full_n),
    .weight_input_write(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write),
    .bound(tmp_1_reg_408),
    .weight_val(p_read_1_reg_359)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln36_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln39_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= 1'b1;
        end else if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready == 1'b1)) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln39_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= 1'b1;
        end else if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready == 1'b1)) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state7) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= 1'b1;
        end else if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready == 1'b1)) begin
            grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        output_data_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (empty_17_reg_399 == 1'd0))) begin
            output_data_preg <= buff_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        batch_fu_96 <= 30'd0;
    end else if (((icmp_ln67_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        batch_fu_96 <= add_ln36_reg_418;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done == 1'b1))) begin
        row_reg_165 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        row_reg_165 <= add_ln67_reg_439;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        turn_reg_154 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done == 1'b1))) begin
        turn_reg_154 <= add_ln39_reg_426;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln36_1_reg_403 <= add_ln36_1_fu_267_p2;
        empty_17_reg_399 <= empty_17_fu_262_p2;
        select_ln24_reg_394 <= select_ln24_fu_255_p3;
        tmp_1_reg_408[33 : 2] <= tmp_1_fu_272_p3[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln36_reg_418 <= add_ln36_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln39_reg_426 <= add_ln39_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln67_reg_439 <= add_ln67_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_389 <= empty_fu_234_p1;
        featrue_length_read_reg_364 <= featrue_length_dout;
        output_size_read_reg_353 <= output_size_dout;
        p_read_1_reg_359 <= p_read1_dout;
        p_read_2_reg_369 <= p_read_dout;
        tmp_reg_374 <= node_cnt_dout[32'd31];
        trunc_ln24_1_reg_379 <= {{sub_ln24_fu_208_p2[31:2]}};
        trunc_ln24_2_reg_384 <= {{node_cnt_dout[31:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if (((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buff_address0 = p_cast_fu_325_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buff_address0 = grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0;
    end else begin
        buff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buff_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buff_ce0 = grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0;
    end else begin
        buff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buff_we0 = grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0;
    end else begin
        buff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        featrue_length_blk_n = featrue_length_empty_n;
    end else begin
        featrue_length_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        featrue_length_read = 1'b1;
    end else begin
        featrue_length_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        node_cnt_blk_n = node_cnt_empty_n;
    end else begin
        node_cnt_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        node_cnt_read = 1'b1;
    end else begin
        node_cnt_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (empty_17_reg_399 == 1'd0))) begin
        output_data = buff_q0;
    end else begin
        output_data = output_data_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (empty_17_reg_399 == 1'd0))) begin
        output_data_ap_vld = 1'b1;
    end else begin
        output_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_read = grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read;
    end else begin
        output_r_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_size_blk_n = output_size_empty_n;
    end else begin
        output_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_size_read = 1'b1;
    end else begin
        output_size_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_blk_n = p_read1_empty_n;
    end else begin
        p_read1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_read = 1'b1;
    end else begin
        p_read1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_blk_n = p_read_empty_n;
    end else begin
        p_read_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_read = 1'b1;
    end else begin
        p_read_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        property_input_write = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write;
    end else begin
        property_input_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weight_input_write = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write;
    end else begin
        weight_input_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln36_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln39_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln67_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln36_1_fu_267_p2 = ($signed(empty_reg_389) + $signed(7'd127));

assign add_ln36_fu_291_p2 = (batch_fu_96 + 30'd1);

assign add_ln39_fu_302_p2 = (turn_reg_154 + 32'd1);

assign add_ln67_fu_336_p2 = (row_reg_165 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state7 = ap_NS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((p_read_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (featrue_length_empty_n == 1'b0) | (output_size_empty_n == 1'b0) | (node_cnt_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign empty_17_fu_262_p2 = ((output_size_read_reg_353 == 32'd0) ? 1'b1 : 1'b0);

assign empty_18_fu_308_p1 = row_reg_165[1:0];

assign empty_19_fu_320_p2 = (tmp_3_fu_312_p3 + add_ln36_1_reg_403);

assign empty_fu_234_p1 = output_size_dout[6:0];

assign grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start = grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg;

assign grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg;

assign grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg;

assign icmp_ln36_fu_286_p2 = (($signed(zext_ln36_fu_282_p1) < $signed(select_ln24_reg_394)) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_297_p2 = ((turn_reg_154 == featrue_length_read_reg_364) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_330_p2 = ((row_reg_165 == 3'd4) ? 1'b1 : 1'b0);

assign p_cast_fu_325_p1 = empty_19_fu_320_p2;

assign property_input_din = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din;

assign select_ln24_fu_255_p3 = ((tmp_reg_374[0:0] == 1'b1) ? sub_ln24_1_fu_246_p2 : zext_ln24_1_fu_252_p1);

assign sub_ln24_1_fu_246_p2 = (31'd0 - zext_ln24_fu_243_p1);

assign sub_ln24_fu_208_p2 = (32'd0 - node_cnt_dout);

assign tmp_1_fu_272_p3 = {{output_size_read_reg_353}, {2'd0}};

assign tmp_3_fu_312_p3 = {{empty_18_fu_308_p1}, {5'd0}};

assign weight_input_din = grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din;

assign zext_ln24_1_fu_252_p1 = trunc_ln24_2_reg_384;

assign zext_ln24_fu_243_p1 = trunc_ln24_1_reg_379;

assign zext_ln36_fu_282_p1 = batch_fu_96;

always @ (posedge ap_clk) begin
    tmp_1_reg_408[1:0] <= 2'b00;
end

endmodule //vector_add_rerArray_Loop_input_batch_proc3
