-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vector_add_rerArray_Loop_input_batch_proc3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    node_cnt_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    node_cnt_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    node_cnt_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    node_cnt_empty_n : IN STD_LOGIC;
    node_cnt_read : OUT STD_LOGIC;
    output_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    output_size_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    output_size_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    output_size_empty_n : IN STD_LOGIC;
    output_size_read : OUT STD_LOGIC;
    output_data : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_data_ap_vld : OUT STD_LOGIC;
    output_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    output_r_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    output_r_empty_n : IN STD_LOGIC;
    output_r_read : OUT STD_LOGIC;
    featrue_length_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    featrue_length_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    featrue_length_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    featrue_length_empty_n : IN STD_LOGIC;
    featrue_length_read : OUT STD_LOGIC;
    p_read1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    p_read1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    p_read1_empty_n : IN STD_LOGIC;
    p_read1_read : OUT STD_LOGIC;
    weight_input_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_input_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    weight_input_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    weight_input_full_n : IN STD_LOGIC;
    weight_input_write : OUT STD_LOGIC;
    p_read_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    p_read_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    p_read_empty_n : IN STD_LOGIC;
    p_read_read : OUT STD_LOGIC;
    property_input_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    property_input_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    property_input_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    property_input_full_n : IN STD_LOGIC;
    property_input_write : OUT STD_LOGIC );
end;


architecture behav of vector_add_rerArray_Loop_input_batch_proc3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal node_cnt_blk_n : STD_LOGIC;
    signal output_size_blk_n : STD_LOGIC;
    signal featrue_length_blk_n : STD_LOGIC;
    signal p_read1_blk_n : STD_LOGIC;
    signal p_read_blk_n : STD_LOGIC;
    signal output_size_read_reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_read_1_reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal featrue_length_read_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_read_2_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_374 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln24_1_reg_379 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln24_2_reg_384 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_fu_234_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_389 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln24_fu_255_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln24_reg_394 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_17_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_reg_399 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln36_1_fu_267_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln36_1_reg_403 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_272_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_1_reg_408 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln36_fu_291_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln36_reg_418 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln39_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln39_reg_426 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln67_fu_336_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln67_reg_439 : STD_LOGIC_VECTOR (2 downto 0);
    signal buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal buff_ce0 : STD_LOGIC;
    signal buff_we0 : STD_LOGIC;
    signal buff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_idle : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_idle : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0 : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0 : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_idle : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready : STD_LOGIC;
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write : STD_LOGIC;
    signal turn_reg_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln36_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_reg_165 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln39_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal p_cast_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal batch_fu_96 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln67_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal output_data_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sub_ln24_fu_208_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln24_fu_243_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln24_1_fu_246_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln24_1_fu_252_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln36_fu_282_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_18_fu_308_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_312_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_19_fu_320_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        property_input_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        property_input_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        property_input_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        property_input_full_n : IN STD_LOGIC;
        property_input_write : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (33 downto 0);
        featrue_val : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        output_r_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        output_r_empty_n : IN STD_LOGIC;
        output_r_read : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (33 downto 0);
        buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        buff_ce0 : OUT STD_LOGIC;
        buff_we0 : OUT STD_LOGIC;
        buff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_input_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_input_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        weight_input_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        weight_input_full_n : IN STD_LOGIC;
        weight_input_write : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (33 downto 0);
        weight_val : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vector_add_rerArray_Loop_input_batch_proc3_buff_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buff_U : component vector_add_rerArray_Loop_input_batch_proc3_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_address0,
        ce0 => buff_ce0,
        we0 => buff_we0,
        d0 => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0,
        q0 => buff_q0);

    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176 : component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start,
        ap_done => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done,
        ap_idle => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_idle,
        ap_ready => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready,
        property_input_din => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din,
        property_input_num_data_valid => ap_const_lv2_0,
        property_input_fifo_cap => ap_const_lv2_0,
        property_input_full_n => property_input_full_n,
        property_input_write => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write,
        bound => tmp_1_reg_408,
        featrue_val => p_read_2_reg_369);

    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184 : component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start,
        ap_done => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done,
        ap_idle => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_idle,
        ap_ready => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready,
        output_r_dout => output_r_dout,
        output_r_num_data_valid => ap_const_lv2_0,
        output_r_fifo_cap => ap_const_lv2_0,
        output_r_empty_n => output_r_empty_n,
        output_r_read => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read,
        bound => tmp_1_reg_408,
        buff_address0 => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0,
        buff_ce0 => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0,
        buff_we0 => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0,
        buff_d0 => grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_d0);

    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192 : component vector_add_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start,
        ap_done => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done,
        ap_idle => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_idle,
        ap_ready => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready,
        weight_input_din => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din,
        weight_input_num_data_valid => ap_const_lv2_0,
        weight_input_fifo_cap => ap_const_lv2_0,
        weight_input_full_n => weight_input_full_n,
        weight_input_write => grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write,
        bound => tmp_1_reg_408,
        weight_val => p_read_1_reg_359);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln36_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln39_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln39_fu_297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_ready = ap_const_logic_1)) then 
                    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    output_data_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                output_data_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (empty_17_reg_399 = ap_const_lv1_0))) then 
                    output_data_preg <= buff_q0;
                end if; 
            end if;
        end if;
    end process;


    batch_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                batch_fu_96 <= ap_const_lv30_0;
            elsif (((icmp_ln67_fu_330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                batch_fu_96 <= add_ln36_reg_418;
            end if; 
        end if;
    end process;

    row_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done = ap_const_logic_1))) then 
                row_reg_165 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                row_reg_165 <= add_ln67_reg_439;
            end if; 
        end if;
    end process;

    turn_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln36_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                turn_reg_154 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done = ap_const_logic_1))) then 
                turn_reg_154 <= add_ln39_reg_426;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln36_1_reg_403 <= add_ln36_1_fu_267_p2;
                empty_17_reg_399 <= empty_17_fu_262_p2;
                select_ln24_reg_394 <= select_ln24_fu_255_p3;
                    tmp_1_reg_408(33 downto 2) <= tmp_1_fu_272_p3(33 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln36_reg_418 <= add_ln36_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln39_reg_426 <= add_ln39_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln67_reg_439 <= add_ln67_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_389 <= empty_fu_234_p1;
                featrue_length_read_reg_364 <= featrue_length_dout;
                output_size_read_reg_353 <= output_size_dout;
                p_read_1_reg_359 <= p_read1_dout;
                p_read_2_reg_369 <= p_read_dout;
                tmp_reg_374 <= node_cnt_dout(31 downto 31);
                trunc_ln24_1_reg_379 <= sub_ln24_fu_208_p2(31 downto 2);
                trunc_ln24_2_reg_384 <= node_cnt_dout(31 downto 2);
            end if;
        end if;
    end process;
    tmp_1_reg_408(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done, grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done, grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done, ap_CS_fsm_state8, icmp_ln36_fu_286_p2, ap_CS_fsm_state9, icmp_ln39_fu_297_p2, ap_CS_fsm_state5, icmp_ln67_fu_330_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln36_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln39_fu_297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln67_fu_330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln36_1_fu_267_p2 <= std_logic_vector(unsigned(empty_reg_389) + unsigned(ap_const_lv7_7F));
    add_ln36_fu_291_p2 <= std_logic_vector(unsigned(batch_fu_96) + unsigned(ap_const_lv30_1));
    add_ln39_fu_302_p2 <= std_logic_vector(unsigned(turn_reg_154) + unsigned(ap_const_lv32_1));
    add_ln67_fu_336_p2 <= std_logic_vector(unsigned(row_reg_165) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if (((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done)
    begin
        if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done)
    begin
        if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done)
    begin
        if ((grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
                ap_block_state1 <= ((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln36_fu_286_p2)
    begin
        if (((icmp_ln36_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln36_fu_286_p2)
    begin
        if (((icmp_ln36_fu_286_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buff_address0_assign_proc : process(ap_CS_fsm_state10, grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0, ap_CS_fsm_state9, p_cast_fu_325_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_address0 <= p_cast_fu_325_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_address0 <= grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_address0;
        else 
            buff_address0 <= "XXXXXXX";
        end if; 
    end process;


    buff_ce0_assign_proc : process(ap_CS_fsm_state10, grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_ce0 <= grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_ce0;
        else 
            buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_we0_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_we0 <= grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_buff_we0;
        else 
            buff_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_17_fu_262_p2 <= "1" when (output_size_read_reg_353 = ap_const_lv32_0) else "0";
    empty_18_fu_308_p1 <= row_reg_165(2 - 1 downto 0);
    empty_19_fu_320_p2 <= std_logic_vector(unsigned(tmp_3_fu_312_p3) + unsigned(add_ln36_1_reg_403));
    empty_fu_234_p1 <= output_size_dout(7 - 1 downto 0);

    featrue_length_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, featrue_length_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            featrue_length_blk_n <= featrue_length_empty_n;
        else 
            featrue_length_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    featrue_length_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            featrue_length_read <= ap_const_logic_1;
        else 
            featrue_length_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start <= grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_ap_start_reg;
    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_ap_start_reg;
    grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_ap_start_reg;
    icmp_ln36_fu_286_p2 <= "1" when (signed(zext_ln36_fu_282_p1) < signed(select_ln24_reg_394)) else "0";
    icmp_ln39_fu_297_p2 <= "1" when (turn_reg_154 = featrue_length_read_reg_364) else "0";
    icmp_ln67_fu_330_p2 <= "1" when (row_reg_165 = ap_const_lv3_4) else "0";

    node_cnt_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            node_cnt_blk_n <= node_cnt_empty_n;
        else 
            node_cnt_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    node_cnt_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            node_cnt_read <= ap_const_logic_1;
        else 
            node_cnt_read <= ap_const_logic_0;
        end if; 
    end process;


    output_data_assign_proc : process(empty_17_reg_399, buff_q0, ap_CS_fsm_state11, output_data_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (empty_17_reg_399 = ap_const_lv1_0))) then 
            output_data <= buff_q0;
        else 
            output_data <= output_data_preg;
        end if; 
    end process;


    output_data_ap_vld_assign_proc : process(empty_17_reg_399, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (empty_17_reg_399 = ap_const_lv1_0))) then 
            output_data_ap_vld <= ap_const_logic_1;
        else 
            output_data_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    output_r_read_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_read <= grp_rerArray_Loop_input_batch_proc3_Pipeline_VITIS_LOOP_60_3_VITIS_LOOP_62_4_fu_184_output_r_read;
        else 
            output_r_read <= ap_const_logic_0;
        end if; 
    end process;


    output_size_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, output_size_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_size_blk_n <= output_size_empty_n;
        else 
            output_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_size_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_size_read <= ap_const_logic_1;
        else 
            output_size_read <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_19_fu_320_p2),64));

    p_read1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_read1_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_blk_n <= p_read1_empty_n;
        else 
            p_read1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_read1_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read1_read <= ap_const_logic_1;
        else 
            p_read1_read <= ap_const_logic_0;
        end if; 
    end process;


    p_read_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_read_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read_blk_n <= p_read_empty_n;
        else 
            p_read_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_read_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, node_cnt_empty_n, output_size_empty_n, featrue_length_empty_n, p_read1_empty_n, p_read_empty_n)
    begin
        if ((not(((p_read_empty_n = ap_const_logic_0) or (p_read1_empty_n = ap_const_logic_0) or (featrue_length_empty_n = ap_const_logic_0) or (output_size_empty_n = ap_const_logic_0) or (node_cnt_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_read_read <= ap_const_logic_1;
        else 
            p_read_read <= ap_const_logic_0;
        end if; 
    end process;

    property_input_din <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_din;

    property_input_write_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            property_input_write <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_property_VITIS_LOOP_45_1_fu_176_property_input_write;
        else 
            property_input_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln24_fu_255_p3 <= 
        sub_ln24_1_fu_246_p2 when (tmp_reg_374(0) = '1') else 
        zext_ln24_1_fu_252_p1;
    sub_ln24_1_fu_246_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln24_fu_243_p1));
    sub_ln24_fu_208_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(node_cnt_dout));
    tmp_1_fu_272_p3 <= (output_size_read_reg_353 & ap_const_lv2_0);
    tmp_3_fu_312_p3 <= (empty_18_fu_308_p1 & ap_const_lv5_0);
    weight_input_din <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_din;

    weight_input_write_assign_proc : process(grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weight_input_write <= grp_rerArray_Loop_input_batch_proc3_Pipeline_input_weight_VITIS_LOOP_54_2_fu_192_weight_input_write;
        else 
            weight_input_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln24_1_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln24_2_reg_384),31));
    zext_ln24_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln24_1_reg_379),31));
    zext_ln36_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(batch_fu_96),31));
end behav;
