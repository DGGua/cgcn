// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module vector_add_rerArray (
        p_read,
        featrue_length,
        p_read1,
        output_size,
        node_cnt,
        output_data,
        ap_clk,
        ap_rst,
        p_read_ap_vld,
        p_read1_ap_vld,
        node_cnt_ap_vld,
        ap_start,
        output_size_ap_vld,
        featrue_length_ap_vld,
        output_data_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] p_read;
input  [31:0] featrue_length;
input  [31:0] p_read1;
input  [31:0] output_size;
input  [31:0] node_cnt;
output  [31:0] output_data;
input   ap_clk;
input   ap_rst;
input   p_read_ap_vld;
input   p_read1_ap_vld;
input   node_cnt_ap_vld;
input   ap_start;
input   output_size_ap_vld;
input   featrue_length_ap_vld;
output   output_data_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [31:0] entry_proc_U0_p_read_c_din;
wire    entry_proc_U0_p_read_c_write;
wire   [31:0] entry_proc_U0_p_read1_c_din;
wire    entry_proc_U0_p_read1_c_write;
wire   [31:0] entry_proc_U0_node_cnt_c_din;
wire    entry_proc_U0_node_cnt_c_write;
wire    rerArray_Loop_compute_col_proc2_U0_ap_start;
wire    rerArray_Loop_compute_col_proc2_U0_ap_done;
wire    rerArray_Loop_compute_col_proc2_U0_ap_continue;
wire    rerArray_Loop_compute_col_proc2_U0_ap_idle;
wire    rerArray_Loop_compute_col_proc2_U0_ap_ready;
wire   [31:0] rerArray_Loop_compute_col_proc2_U0_output_r_din;
wire    rerArray_Loop_compute_col_proc2_U0_output_r_write;
wire    rerArray_Loop_compute_col_proc2_U0_property_input_read;
wire    rerArray_Loop_compute_col_proc2_U0_weight_input_read;
wire   [31:0] rerArray_Loop_compute_col_proc2_U0_featrue_length_c_din;
wire    rerArray_Loop_compute_col_proc2_U0_featrue_length_c_write;
wire   [31:0] rerArray_Loop_compute_col_proc2_U0_output_size_c_din;
wire    rerArray_Loop_compute_col_proc2_U0_output_size_c_write;
wire    rerArray_Loop_input_batch_proc3_U0_ap_start;
wire    rerArray_Loop_input_batch_proc3_U0_ap_done;
wire    rerArray_Loop_input_batch_proc3_U0_ap_continue;
wire    rerArray_Loop_input_batch_proc3_U0_ap_idle;
wire    rerArray_Loop_input_batch_proc3_U0_ap_ready;
wire    rerArray_Loop_input_batch_proc3_U0_node_cnt_read;
wire    rerArray_Loop_input_batch_proc3_U0_output_size_read;
wire   [31:0] rerArray_Loop_input_batch_proc3_U0_output_data;
wire    rerArray_Loop_input_batch_proc3_U0_output_data_ap_vld;
wire    rerArray_Loop_input_batch_proc3_U0_output_r_read;
wire    rerArray_Loop_input_batch_proc3_U0_featrue_length_read;
wire    rerArray_Loop_input_batch_proc3_U0_p_read1_read;
wire   [31:0] rerArray_Loop_input_batch_proc3_U0_weight_input_din;
wire    rerArray_Loop_input_batch_proc3_U0_weight_input_write;
wire    rerArray_Loop_input_batch_proc3_U0_p_read_read;
wire   [31:0] rerArray_Loop_input_batch_proc3_U0_property_input_din;
wire    rerArray_Loop_input_batch_proc3_U0_property_input_write;
wire    p_read_c_full_n;
wire   [31:0] p_read_c_dout;
wire   [2:0] p_read_c_num_data_valid;
wire   [2:0] p_read_c_fifo_cap;
wire    p_read_c_empty_n;
wire    p_read1_c_full_n;
wire   [31:0] p_read1_c_dout;
wire   [2:0] p_read1_c_num_data_valid;
wire   [2:0] p_read1_c_fifo_cap;
wire    p_read1_c_empty_n;
wire    node_cnt_c_full_n;
wire   [31:0] node_cnt_c_dout;
wire   [2:0] node_cnt_c_num_data_valid;
wire   [2:0] node_cnt_c_fifo_cap;
wire    node_cnt_c_empty_n;
wire    output_full_n;
wire   [31:0] output_dout;
wire   [1:0] output_num_data_valid;
wire   [1:0] output_fifo_cap;
wire    output_empty_n;
wire    property_input_full_n;
wire   [31:0] property_input_dout;
wire   [1:0] property_input_num_data_valid;
wire   [1:0] property_input_fifo_cap;
wire    property_input_empty_n;
wire    weight_input_full_n;
wire   [31:0] weight_input_dout;
wire   [1:0] weight_input_num_data_valid;
wire   [1:0] weight_input_fifo_cap;
wire    weight_input_empty_n;
wire    featrue_length_c_full_n;
wire   [31:0] featrue_length_c_dout;
wire   [1:0] featrue_length_c_num_data_valid;
wire   [1:0] featrue_length_c_fifo_cap;
wire    featrue_length_c_empty_n;
wire    output_size_c_full_n;
wire   [31:0] output_size_c_dout;
wire   [1:0] output_size_c_num_data_valid;
wire   [1:0] output_size_c_fifo_cap;
wire    output_size_c_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready;
wire    ap_sync_rerArray_Loop_compute_col_proc2_U0_ap_ready;
wire   [0:0] start_for_rerArray_Loop_input_batch_proc3_U0_din;
wire    start_for_rerArray_Loop_input_batch_proc3_U0_full_n;
wire   [0:0] start_for_rerArray_Loop_input_batch_proc3_U0_dout;
wire    start_for_rerArray_Loop_input_batch_proc3_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready = 1'b0;
end

vector_add_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_rerArray_Loop_input_batch_proc3_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .p_read(p_read),
    .p_read_c_din(entry_proc_U0_p_read_c_din),
    .p_read_c_num_data_valid(p_read_c_num_data_valid),
    .p_read_c_fifo_cap(p_read_c_fifo_cap),
    .p_read_c_full_n(p_read_c_full_n),
    .p_read_c_write(entry_proc_U0_p_read_c_write),
    .p_read1(p_read1),
    .p_read1_c_din(entry_proc_U0_p_read1_c_din),
    .p_read1_c_num_data_valid(p_read1_c_num_data_valid),
    .p_read1_c_fifo_cap(p_read1_c_fifo_cap),
    .p_read1_c_full_n(p_read1_c_full_n),
    .p_read1_c_write(entry_proc_U0_p_read1_c_write),
    .node_cnt(node_cnt),
    .node_cnt_c_din(entry_proc_U0_node_cnt_c_din),
    .node_cnt_c_num_data_valid(node_cnt_c_num_data_valid),
    .node_cnt_c_fifo_cap(node_cnt_c_fifo_cap),
    .node_cnt_c_full_n(node_cnt_c_full_n),
    .node_cnt_c_write(entry_proc_U0_node_cnt_c_write)
);

vector_add_rerArray_Loop_compute_col_proc2 rerArray_Loop_compute_col_proc2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(rerArray_Loop_compute_col_proc2_U0_ap_start),
    .ap_done(rerArray_Loop_compute_col_proc2_U0_ap_done),
    .ap_continue(rerArray_Loop_compute_col_proc2_U0_ap_continue),
    .ap_idle(rerArray_Loop_compute_col_proc2_U0_ap_idle),
    .ap_ready(rerArray_Loop_compute_col_proc2_U0_ap_ready),
    .output_size(output_size),
    .output_r_din(rerArray_Loop_compute_col_proc2_U0_output_r_din),
    .output_r_num_data_valid(output_num_data_valid),
    .output_r_fifo_cap(output_fifo_cap),
    .output_r_full_n(output_full_n),
    .output_r_write(rerArray_Loop_compute_col_proc2_U0_output_r_write),
    .featrue_length(featrue_length),
    .property_input_dout(property_input_dout),
    .property_input_num_data_valid(property_input_num_data_valid),
    .property_input_fifo_cap(property_input_fifo_cap),
    .property_input_empty_n(property_input_empty_n),
    .property_input_read(rerArray_Loop_compute_col_proc2_U0_property_input_read),
    .weight_input_dout(weight_input_dout),
    .weight_input_num_data_valid(weight_input_num_data_valid),
    .weight_input_fifo_cap(weight_input_fifo_cap),
    .weight_input_empty_n(weight_input_empty_n),
    .weight_input_read(rerArray_Loop_compute_col_proc2_U0_weight_input_read),
    .featrue_length_c_din(rerArray_Loop_compute_col_proc2_U0_featrue_length_c_din),
    .featrue_length_c_num_data_valid(featrue_length_c_num_data_valid),
    .featrue_length_c_fifo_cap(featrue_length_c_fifo_cap),
    .featrue_length_c_full_n(featrue_length_c_full_n),
    .featrue_length_c_write(rerArray_Loop_compute_col_proc2_U0_featrue_length_c_write),
    .output_size_c_din(rerArray_Loop_compute_col_proc2_U0_output_size_c_din),
    .output_size_c_num_data_valid(output_size_c_num_data_valid),
    .output_size_c_fifo_cap(output_size_c_fifo_cap),
    .output_size_c_full_n(output_size_c_full_n),
    .output_size_c_write(rerArray_Loop_compute_col_proc2_U0_output_size_c_write)
);

vector_add_rerArray_Loop_input_batch_proc3 rerArray_Loop_input_batch_proc3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(rerArray_Loop_input_batch_proc3_U0_ap_start),
    .ap_done(rerArray_Loop_input_batch_proc3_U0_ap_done),
    .ap_continue(rerArray_Loop_input_batch_proc3_U0_ap_continue),
    .ap_idle(rerArray_Loop_input_batch_proc3_U0_ap_idle),
    .ap_ready(rerArray_Loop_input_batch_proc3_U0_ap_ready),
    .node_cnt_dout(node_cnt_c_dout),
    .node_cnt_num_data_valid(node_cnt_c_num_data_valid),
    .node_cnt_fifo_cap(node_cnt_c_fifo_cap),
    .node_cnt_empty_n(node_cnt_c_empty_n),
    .node_cnt_read(rerArray_Loop_input_batch_proc3_U0_node_cnt_read),
    .output_size_dout(output_size_c_dout),
    .output_size_num_data_valid(output_size_c_num_data_valid),
    .output_size_fifo_cap(output_size_c_fifo_cap),
    .output_size_empty_n(output_size_c_empty_n),
    .output_size_read(rerArray_Loop_input_batch_proc3_U0_output_size_read),
    .output_data(rerArray_Loop_input_batch_proc3_U0_output_data),
    .output_data_ap_vld(rerArray_Loop_input_batch_proc3_U0_output_data_ap_vld),
    .output_r_dout(output_dout),
    .output_r_num_data_valid(output_num_data_valid),
    .output_r_fifo_cap(output_fifo_cap),
    .output_r_empty_n(output_empty_n),
    .output_r_read(rerArray_Loop_input_batch_proc3_U0_output_r_read),
    .featrue_length_dout(featrue_length_c_dout),
    .featrue_length_num_data_valid(featrue_length_c_num_data_valid),
    .featrue_length_fifo_cap(featrue_length_c_fifo_cap),
    .featrue_length_empty_n(featrue_length_c_empty_n),
    .featrue_length_read(rerArray_Loop_input_batch_proc3_U0_featrue_length_read),
    .p_read1_dout(p_read1_c_dout),
    .p_read1_num_data_valid(p_read1_c_num_data_valid),
    .p_read1_fifo_cap(p_read1_c_fifo_cap),
    .p_read1_empty_n(p_read1_c_empty_n),
    .p_read1_read(rerArray_Loop_input_batch_proc3_U0_p_read1_read),
    .weight_input_din(rerArray_Loop_input_batch_proc3_U0_weight_input_din),
    .weight_input_num_data_valid(weight_input_num_data_valid),
    .weight_input_fifo_cap(weight_input_fifo_cap),
    .weight_input_full_n(weight_input_full_n),
    .weight_input_write(rerArray_Loop_input_batch_proc3_U0_weight_input_write),
    .p_read_dout(p_read_c_dout),
    .p_read_num_data_valid(p_read_c_num_data_valid),
    .p_read_fifo_cap(p_read_c_fifo_cap),
    .p_read_empty_n(p_read_c_empty_n),
    .p_read_read(rerArray_Loop_input_batch_proc3_U0_p_read_read),
    .property_input_din(rerArray_Loop_input_batch_proc3_U0_property_input_din),
    .property_input_num_data_valid(property_input_num_data_valid),
    .property_input_fifo_cap(property_input_fifo_cap),
    .property_input_full_n(property_input_full_n),
    .property_input_write(rerArray_Loop_input_batch_proc3_U0_property_input_write)
);

vector_add_fifo_w32_d3_S p_read_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_p_read_c_din),
    .if_full_n(p_read_c_full_n),
    .if_write(entry_proc_U0_p_read_c_write),
    .if_dout(p_read_c_dout),
    .if_num_data_valid(p_read_c_num_data_valid),
    .if_fifo_cap(p_read_c_fifo_cap),
    .if_empty_n(p_read_c_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_p_read_read)
);

vector_add_fifo_w32_d3_S p_read1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_p_read1_c_din),
    .if_full_n(p_read1_c_full_n),
    .if_write(entry_proc_U0_p_read1_c_write),
    .if_dout(p_read1_c_dout),
    .if_num_data_valid(p_read1_c_num_data_valid),
    .if_fifo_cap(p_read1_c_fifo_cap),
    .if_empty_n(p_read1_c_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_p_read1_read)
);

vector_add_fifo_w32_d3_S node_cnt_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_node_cnt_c_din),
    .if_full_n(node_cnt_c_full_n),
    .if_write(entry_proc_U0_node_cnt_c_write),
    .if_dout(node_cnt_c_dout),
    .if_num_data_valid(node_cnt_c_num_data_valid),
    .if_fifo_cap(node_cnt_c_fifo_cap),
    .if_empty_n(node_cnt_c_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_node_cnt_read)
);

vector_add_fifo_w32_d2_S output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rerArray_Loop_compute_col_proc2_U0_output_r_din),
    .if_full_n(output_full_n),
    .if_write(rerArray_Loop_compute_col_proc2_U0_output_r_write),
    .if_dout(output_dout),
    .if_num_data_valid(output_num_data_valid),
    .if_fifo_cap(output_fifo_cap),
    .if_empty_n(output_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_output_r_read)
);

vector_add_fifo_w32_d2_S property_input_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rerArray_Loop_input_batch_proc3_U0_property_input_din),
    .if_full_n(property_input_full_n),
    .if_write(rerArray_Loop_input_batch_proc3_U0_property_input_write),
    .if_dout(property_input_dout),
    .if_num_data_valid(property_input_num_data_valid),
    .if_fifo_cap(property_input_fifo_cap),
    .if_empty_n(property_input_empty_n),
    .if_read(rerArray_Loop_compute_col_proc2_U0_property_input_read)
);

vector_add_fifo_w32_d2_S weight_input_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rerArray_Loop_input_batch_proc3_U0_weight_input_din),
    .if_full_n(weight_input_full_n),
    .if_write(rerArray_Loop_input_batch_proc3_U0_weight_input_write),
    .if_dout(weight_input_dout),
    .if_num_data_valid(weight_input_num_data_valid),
    .if_fifo_cap(weight_input_fifo_cap),
    .if_empty_n(weight_input_empty_n),
    .if_read(rerArray_Loop_compute_col_proc2_U0_weight_input_read)
);

vector_add_fifo_w32_d2_S featrue_length_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rerArray_Loop_compute_col_proc2_U0_featrue_length_c_din),
    .if_full_n(featrue_length_c_full_n),
    .if_write(rerArray_Loop_compute_col_proc2_U0_featrue_length_c_write),
    .if_dout(featrue_length_c_dout),
    .if_num_data_valid(featrue_length_c_num_data_valid),
    .if_fifo_cap(featrue_length_c_fifo_cap),
    .if_empty_n(featrue_length_c_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_featrue_length_read)
);

vector_add_fifo_w32_d2_S output_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rerArray_Loop_compute_col_proc2_U0_output_size_c_din),
    .if_full_n(output_size_c_full_n),
    .if_write(rerArray_Loop_compute_col_proc2_U0_output_size_c_write),
    .if_dout(output_size_c_dout),
    .if_num_data_valid(output_size_c_num_data_valid),
    .if_fifo_cap(output_size_c_fifo_cap),
    .if_empty_n(output_size_c_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_output_size_read)
);

vector_add_start_for_rerArray_Loop_input_batch_proc3_U0 start_for_rerArray_Loop_input_batch_proc3_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_rerArray_Loop_input_batch_proc3_U0_din),
    .if_full_n(start_for_rerArray_Loop_input_batch_proc3_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_rerArray_Loop_input_batch_proc3_U0_dout),
    .if_empty_n(start_for_rerArray_Loop_input_batch_proc3_U0_empty_n),
    .if_read(rerArray_Loop_input_batch_proc3_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready <= ap_sync_rerArray_Loop_compute_col_proc2_U0_ap_ready;
        end
    end
end

assign ap_done = rerArray_Loop_input_batch_proc3_U0_ap_done;

assign ap_idle = (rerArray_Loop_input_batch_proc3_U0_ap_idle & rerArray_Loop_compute_col_proc2_U0_ap_idle & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_rerArray_Loop_compute_col_proc2_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign ap_sync_rerArray_Loop_compute_col_proc2_U0_ap_ready = (rerArray_Loop_compute_col_proc2_U0_ap_ready | ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign output_data = rerArray_Loop_input_batch_proc3_U0_output_data;

assign output_data_ap_vld = rerArray_Loop_input_batch_proc3_U0_output_data_ap_vld;

assign rerArray_Loop_compute_col_proc2_U0_ap_continue = 1'b1;

assign rerArray_Loop_compute_col_proc2_U0_ap_start = ((ap_sync_reg_rerArray_Loop_compute_col_proc2_U0_ap_ready ^ 1'b1) & ap_start);

assign rerArray_Loop_input_batch_proc3_U0_ap_continue = ap_continue;

assign rerArray_Loop_input_batch_proc3_U0_ap_start = start_for_rerArray_Loop_input_batch_proc3_U0_empty_n;

assign start_for_rerArray_Loop_input_batch_proc3_U0_din = 1'b1;

endmodule //vector_add_rerArray
